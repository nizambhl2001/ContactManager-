@model AspNetCoreMvcJwtApp.Models.Person

@{
    ViewData["Title"] = "Edit Person";
}

<h2 class="mb-4">Edit Person</h2>

<form asp-action="Edit" method="post" class="needs-validation" novalidate>
    <input type="hidden" asp-for="Id" />

    <div class="mb-3">
        <label asp-for="Name" class="form-label">Name</label>
        <input asp-for="Name" class="form-control" />
        <span asp-validation-for="Name" class="text-danger"></span>
    </div>

    <hr />
    <h4 class="mb-3">Phone Numbers</h4>
    <div id="phone-container" class="mb-3">
        @for (int i = 0; i < Model.Phones.Count; i++)
        {
            <div class="input-group mb-2">
                <input name="phoneNumbers" value="@Model.Phones[i].Number" class="form-control" />
            </div>
        }
    </div>
    <button type="button" class="btn btn-outline-primary mb-4" onclick="addPhone()">+ Add Phone</button>

    <hr />
    <h4 class="mb-3">Addresses</h4>
    <div id="address-container" class="mb-3">
        @for (int i = 0; i < Model.Addresses.Count; i++)
        {
            <div class="input-group mb-2">
                <input name="addressLocations" value="@Model.Addresses[i].Location" class="form-control" />
            </div>
        }
    </div>
    <button type="button" class="btn btn-outline-primary mb-4" onclick="addAddress()">+ Add Address</button>

    <div class="mt-4">
        <button type="submit" class="btn btn-success">Update</button>
    </div>
</form>

@section Scripts {
    <script>
        function addPhone() {
            const container = document.getElementById('phone-container');
            const input = `<div class="input-group mb-2"><input name="phoneNumbers" class="form-control" /></div>`;
            container.insertAdjacentHTML('beforeend', input);
        }

        function addAddress() {
            const container = document.getElementById('address-container');
            const input = `<div class="input-group mb-2"><input name="addressLocations" class="form-control" /></div>`;
            container.insertAdjacentHTML('beforeend', input);
        }
    </script>
}
